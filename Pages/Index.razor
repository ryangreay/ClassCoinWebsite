@using CoinSite.Services
@inject CoinInfoService coinInfo

@page "/"

<PageTitle>ClassCoin</PageTitle>

@if (captchaSuccess)
{
    <Home></Home>
}
else
{
    <div class="container text-center" style="height:100vh">
        <div class="row text-center">
            <div class="col-12">
                <div class="row visibledesktop text-center" style="margin-top:5rem">
                    <div class="col-3">
                    </div>
                    <div class="col-6 text-center" style="margin-left:auto;margin-right:auto;">
                        <span style="font-size:45px; font-family:tt chocolate bold" class="header-color">CLASS COIN  <img class="visibledesktop" src="images/classcoin_logo.png" style="width:100px;margin-left:auto;margin-right:auto;" /></span>
                    </div>
                    <div class="col-3">
                    </div>

                </div>
                <div class="row visibledevice text-center">
                    <span style="font-size:45px; font-family:tt chocolate bold" class="header-color">CLASS COIN  <img src="images/classcoin_logo.png" style="width:100px;margin-left:auto;margin-right:auto;" /></span>
                </div>
            </div>
            
        </div>
        <div class="d-flex justify-content-center mb-3">
            <span style="font-size:20px; font-family:tt chocolate reg">Verifying you are a human...</span>
        </div>
        <div class="d-flex justify-content-center ">
            <GoogleRecaptcha SuccessCallBack="SuccessCallBack" TimeOutCallBack="TimeOutCallBack"></GoogleRecaptcha>       
        </div>
        @if (progress)
        {
            <div class="d-flex justify-content-center mt-5">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <span class="mx-3" style="line-height:2rem;">Loading site</span>
            </div>       
        }

    </div>  
}

@code {
    bool captchaSuccess = false;
    bool progress = false;
    string captchaResponse = "";
    string captchaMessage = "";

    async void SuccessCallBack(CaptchaSuccessEventArgs e)
    {
        progress = true;
        await Task.Delay(1);

        captchaSuccess = true;
        StateHasChanged();
    }

    void TimeOutCallBack(CaptchaTimeOutEventArgs e)
    {
        captchaSuccess = false;
        Console.WriteLine($"Captcha Time Out with message {e.ErrorMessage}");
        captchaMessage = $"Captcha Timeout: {e.ErrorMessage}";
    }

}